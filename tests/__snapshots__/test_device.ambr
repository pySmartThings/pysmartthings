# serializer version: 1
# name: test_fetching_devices
  list([
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH: 'switch'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '440063de-a200-40b5-8a6b-f3399eaa0370',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Bathroom spot',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-color-temperature-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.SWITCH: 'switch'>,
            <Capability.COLOR_CONTROL: 'colorControl'>,
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HUE_SYNC_MODE: 'samsungim.hueSyncMode'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': 'cb958955-b015-498c-9e62-fc0c51abd054',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Standing light',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-rgbw-color-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH: 'switch'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '0b2ed6c7-dc39-42fd-ab64-8f1c75c1fad0',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Hue ambiance spot 3',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-color-temperature-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.WINDOW_SHADE: 'windowShade'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '571af102-15db-4030-b76b-245a691f74a5',
      'device_manufacturer_code': 'WonderLabs Company',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Curtain 1A',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'c2c-shade',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.WINDOW_SHADE: 'windowShade'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '42efbc29-b283-4d01-a343-f0963ae7dba4',
      'device_manufacturer_code': 'WonderLabs Company',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Curtain 1E',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'c2c-shade',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH: 'switch'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': 'a456cbd5-0503-46be-acc4-54e189dc6ff4',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Sink',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-color-temperature-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.MOTION_SENSOR: 'motionSensor'>,
            <Capability.BATTERY: 'battery'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '08da6244-b3ad-4c45-b005-d8572bd9138f',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Hue motion sensor 1',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'c2c-motion-2',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH: 'switch'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '297b909c-ca9a-4517-ba42-7412269cd00e',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Hue ambiance spot 2',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-color-temperature-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH: 'switch'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '4d4f5261-dc3a-4e31-b8f4-15699c934f62',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Hue ambiance spot 4',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-color-temperature-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.SWITCH: 'switch'>,
            <Capability.COLOR_CONTROL: 'colorControl'>,
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HUE_SYNC_MODE: 'samsungim.hueSyncMode'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '9eaad965-638d-48c2-8aab-e97aa031226e',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Night light',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-rgbw-color-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.THERMOSTAT_MODE: 'thermostatMode'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': 'f1e182eb-1e21-43ed-a32d-f3c2796b9865',
      'device_manufacturer_code': 'Netatmo',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Netatmo NAPlug',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'c2c-thermostat-bridge-1',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.SWITCH: 'switch'>,
            <Capability.COLOR_CONTROL: 'colorControl'>,
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HUE_SYNC_MODE: 'samsungim.hueSyncMode'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '4f43eaf7-b3d1-4d26-be8e-807b37dfe8e0',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Kitchen',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-rgbw-color-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.RELATIVE_HUMIDITY_MEASUREMENT: 'relativeHumidityMeasurement'>,
            <Capability.BATTERY: 'battery'>,
            <Capability.TEMPERATURE_MEASUREMENT: 'temperatureMeasurement'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '5ca2281d-fb11-4835-8990-0ea287556fe5',
      'device_manufacturer_code': 'WonderLabs Company',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Hub 2 08',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'c2c-humidity',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.SWITCH: 'switch'>,
            <Capability.COLOR_CONTROL: 'colorControl'>,
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HUE_SYNC_MODE: 'samsungim.hueSyncMode'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '3cd2ce09-6e19-48a9-b296-558d8cc55726',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Tv',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-rgbw-color-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.SWITCH: 'switch'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': 'e25e6818-efab-4f45-97f8-867ab2c1c33d',
      'device_manufacturer_code': 'WonderLabs Company',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'TV',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'c2c-switch',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.SWITCH: 'switch'>,
            <Capability.COLOR_CONTROL: 'colorControl'>,
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HUE_SYNC_MODE: 'samsungim.hueSyncMode'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '5ed8ef33-96dc-4d53-8ad1-4a15e6361c1e',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Bureau',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-rgbw-color-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH: 'switch'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': 'f15b3d69-7452-4b21-a27c-d3db3c84e2d4',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Hue ambiance spot 5',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-color-temperature-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.SWITCH: 'switch'>,
            <Capability.COLOR_CONTROL: 'colorControl'>,
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HUE_SYNC_MODE: 'samsungim.hueSyncMode'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': 'be1152d6-cad0-4859-b4a6-5770e63dd0b5',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Bed',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-rgbw-color-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH: 'switch'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': '53fa938e-7586-41ca-84e7-ccc6bcba94df',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Hue ambiance spot 1',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-color-temperature-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
    dict({
      'components': list([
        dict({
          'capabilities': list([
            <Capability.SWITCH: 'switch'>,
            <Capability.COLOR_CONTROL: 'colorControl'>,
            <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
            <Capability.SWITCH_LEVEL: 'switchLevel'>,
            <Capability.HEALTH_CHECK: 'healthCheck'>,
            <Capability.REFRESH: 'refresh'>,
            <Capability.HUE_SYNC_MODE: 'samsungim.hueSyncMode'>,
            <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
            <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
          ]),
          'id': 'main',
          'label': 'main',
        }),
      ]),
      'device_id': 'd472222b-0e19-4d33-8375-b2abf6c9df08',
      'device_manufacturer_code': 'Signify Netherlands B.V.',
      'device_network_type': None,
      'device_type_id': None,
      'device_type_name': None,
      'label': 'Bed',
      'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
      'name': 'hue-rgbw-color-bulb',
      'type': <DeviceType.VIPER: 'VIPER'>,
    }),
  ])
# ---
# name: test_fetching_single_device
  dict({
    'components': list([
      dict({
        'capabilities': list([
          <Capability.COLOR_TEMPERATURE: 'colorTemperature'>,
          <Capability.SWITCH: 'switch'>,
          <Capability.SWITCH_LEVEL: 'switchLevel'>,
          <Capability.HEALTH_CHECK: 'healthCheck'>,
          <Capability.REFRESH: 'refresh'>,
          <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>,
          <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>,
        ]),
        'id': 'main',
        'label': 'main',
      }),
    ]),
    'device_id': '440063de-a200-40b5-8a6b-f3399eaa0370',
    'device_manufacturer_code': 'Signify Netherlands B.V.',
    'device_network_type': None,
    'device_type_id': None,
    'device_type_name': None,
    'label': 'Bathroom spot',
    'location_id': '88a3a314-f0c8-40b4-bb44-44ba06c9c42f',
    'name': 'hue-color-temperature-bulb',
    'type': <DeviceType.VIPER: 'VIPER'>,
  })
# ---
# name: test_fetching_status_of_single_device[c2c_humidity]
  dict({
    'main': dict({
      <Capability.BATTERY: 'battery'>: dict({
        <Attribute.BATTERY: 'battery'>: dict({
          'timestamp': '2025-02-08T09:04:47.696Z',
          'unit': '%',
          'value': 100,
        }),
        <Attribute.QUANTITY: 'quantity'>: dict({
          'value': None,
        }),
        <Attribute.TYPE: 'type'>: dict({
          'value': None,
        }),
      }),
      <Capability.HEALTH_CHECK: 'healthCheck'>: dict({
        <Attribute.DEVICE_WATCH_DEVICE_STATUS: 'DeviceWatch-DeviceStatus'>: dict({
          'data': dict({
            'reason': 'DEVICE-OFFLINE',
          }),
          'timestamp': '2025-02-08T09:04:47.696Z',
          'value': 'offline',
        }),
        <Attribute.DEVICE_WATCH_ENROLL: 'DeviceWatch-Enroll'>: dict({
          'value': None,
        }),
        <Attribute.CHECK_INTERVAL: 'checkInterval'>: dict({
          'data': dict({
            'deviceScheme': 'UNTRACKED',
            'protocol': 'cloud',
          }),
          'timestamp': '2025-02-07T23:01:15.973Z',
          'unit': 's',
          'value': 60,
        }),
        <Attribute.HEALTH_STATUS: 'healthStatus'>: dict({
          'value': None,
        }),
      }),
      <Capability.REFRESH: 'refresh'>: dict({
      }),
      <Capability.RELATIVE_HUMIDITY_MEASUREMENT: 'relativeHumidityMeasurement'>: dict({
        <Attribute.HUMIDITY: 'humidity'>: dict({
          'timestamp': '2025-02-08T09:04:47.696Z',
          'unit': '%',
          'value': 26,
        }),
      }),
      <Capability.TEMPERATURE_MEASUREMENT: 'temperatureMeasurement'>: dict({
        <Attribute.TEMPERATURE: 'temperature'>: dict({
          'timestamp': '2025-02-08T09:04:47.696Z',
          'unit': 'C',
          'value': 26,
        }),
        <Attribute.TEMPERATURE_RANGE: 'temperatureRange'>: dict({
          'value': None,
        }),
      }),
    }),
  })
# ---
# name: test_fetching_status_of_single_device[c2c_motion_2]
  dict({
    'main': dict({
      <Capability.BATTERY: 'battery'>: dict({
        <Attribute.BATTERY: 'battery'>: dict({
          'timestamp': '2025-02-08T03:31:03.047Z',
          'unit': '%',
          'value': 64,
        }),
        <Attribute.QUANTITY: 'quantity'>: dict({
          'value': None,
        }),
        <Attribute.TYPE: 'type'>: dict({
          'value': None,
        }),
      }),
      <Capability.HEALTH_CHECK: 'healthCheck'>: dict({
        <Attribute.DEVICE_WATCH_DEVICE_STATUS: 'DeviceWatch-DeviceStatus'>: dict({
          'data': dict({
          }),
          'timestamp': '2025-02-07T15:14:53.765Z',
          'value': 'online',
        }),
        <Attribute.DEVICE_WATCH_ENROLL: 'DeviceWatch-Enroll'>: dict({
          'value': None,
        }),
        <Attribute.CHECK_INTERVAL: 'checkInterval'>: dict({
          'data': dict({
            'deviceScheme': 'UNTRACKED',
            'protocol': 'cloud',
          }),
          'timestamp': '2023-12-17T18:11:41.578Z',
          'unit': 's',
          'value': 60,
        }),
        <Attribute.HEALTH_STATUS: 'healthStatus'>: dict({
          'value': None,
        }),
      }),
      <Capability.MOTION_SENSOR: 'motionSensor'>: dict({
        <Attribute.MOTION: 'motion'>: dict({
          'timestamp': '2025-02-08T07:46:49.463Z',
          'value': 'inactive',
        }),
      }),
      <Capability.REFRESH: 'refresh'>: dict({
      }),
    }),
  })
# ---
# name: test_fetching_status_of_single_device[c2c_shade]
  dict({
    'main': dict({
      <Capability.HEALTH_CHECK: 'healthCheck'>: dict({
        <Attribute.DEVICE_WATCH_DEVICE_STATUS: 'DeviceWatch-DeviceStatus'>: dict({
          'data': dict({
            'reason': 'DEVICE-OFFLINE',
          }),
          'timestamp': '2025-02-08T09:04:47.694Z',
          'value': 'offline',
        }),
        <Attribute.DEVICE_WATCH_ENROLL: 'DeviceWatch-Enroll'>: dict({
          'value': None,
        }),
        <Attribute.CHECK_INTERVAL: 'checkInterval'>: dict({
          'data': dict({
            'deviceScheme': 'UNTRACKED',
            'protocol': 'cloud',
          }),
          'timestamp': '2025-02-07T23:01:15.966Z',
          'unit': 's',
          'value': 60,
        }),
        <Attribute.HEALTH_STATUS: 'healthStatus'>: dict({
          'value': None,
        }),
      }),
      <Capability.REFRESH: 'refresh'>: dict({
      }),
      <Capability.SWITCH_LEVEL: 'switchLevel'>: dict({
        <Attribute.LEVEL: 'level'>: dict({
          'timestamp': '2025-02-08T09:04:47.694Z',
          'unit': '%',
          'value': 100,
        }),
        <Attribute.LEVEL_RANGE: 'levelRange'>: dict({
          'value': None,
        }),
      }),
      <Capability.WINDOW_SHADE: 'windowShade'>: dict({
        <Attribute.SUPPORTED_WINDOW_SHADE_COMMANDS: 'supportedWindowShadeCommands'>: dict({
          'value': None,
        }),
        <Attribute.WINDOW_SHADE: 'windowShade'>: dict({
          'timestamp': '2025-02-08T09:04:47.694Z',
          'value': 'open',
        }),
      }),
    }),
  })
# ---
# name: test_fetching_status_of_single_device[c2c_switch]
  dict({
    'main': dict({
      <Capability.HEALTH_CHECK: 'healthCheck'>: dict({
        <Attribute.DEVICE_WATCH_DEVICE_STATUS: 'DeviceWatch-DeviceStatus'>: dict({
          'data': dict({
            'reason': 'DEVICE-OFFLINE',
          }),
          'timestamp': '2025-02-08T09:04:47.691Z',
          'value': 'offline',
        }),
        <Attribute.DEVICE_WATCH_ENROLL: 'DeviceWatch-Enroll'>: dict({
          'value': None,
        }),
        <Attribute.CHECK_INTERVAL: 'checkInterval'>: dict({
          'data': dict({
            'deviceScheme': 'UNTRACKED',
            'protocol': 'cloud',
          }),
          'timestamp': '2025-02-07T23:01:15.962Z',
          'unit': 's',
          'value': 60,
        }),
        <Attribute.HEALTH_STATUS: 'healthStatus'>: dict({
          'value': None,
        }),
      }),
      <Capability.REFRESH: 'refresh'>: dict({
      }),
      <Capability.SWITCH: 'switch'>: dict({
        <Attribute.SWITCH: 'switch'>: dict({
          'timestamp': '2025-02-08T09:04:47.691Z',
          'value': 'off',
        }),
      }),
    }),
  })
# ---
# name: test_fetching_status_of_single_device[c2c_thermostat_bridge_1]
  dict({
    'main': dict({
      <Capability.HEALTH_CHECK: 'healthCheck'>: dict({
        <Attribute.DEVICE_WATCH_DEVICE_STATUS: 'DeviceWatch-DeviceStatus'>: dict({
          'value': None,
        }),
        <Attribute.DEVICE_WATCH_ENROLL: 'DeviceWatch-Enroll'>: dict({
          'value': None,
        }),
        <Attribute.CHECK_INTERVAL: 'checkInterval'>: dict({
          'data': dict({
            'deviceScheme': 'UNTRACKED',
            'protocol': 'cloud',
          }),
          'timestamp': '2025-02-07T23:03:33.797Z',
          'unit': 's',
          'value': 60,
        }),
        <Attribute.HEALTH_STATUS: 'healthStatus'>: dict({
          'value': None,
        }),
      }),
      <Capability.REFRESH: 'refresh'>: dict({
      }),
      <Capability.THERMOSTAT_MODE: 'thermostatMode'>: dict({
        <Attribute.SUPPORTED_THERMOSTAT_MODES: 'supportedThermostatModes'>: dict({
          'value': None,
        }),
        <Attribute.THERMOSTAT_MODE: 'thermostatMode'>: dict({
          'value': None,
        }),
      }),
    }),
  })
# ---
# name: test_fetching_status_of_single_device[hue_color_temperature_bulb]
  dict({
    'main': dict({
      <Capability.COLOR_TEMPERATURE: 'colorTemperature'>: dict({
        <Attribute.COLOR_TEMPERATURE: 'colorTemperature'>: dict({
          'timestamp': '2025-02-07T21:56:04.127Z',
          'unit': 'K',
          'value': 3000,
        }),
        <Attribute.COLOR_TEMPERATURE_RANGE: 'colorTemperatureRange'>: dict({
          'timestamp': '2025-02-07T15:14:53.823Z',
          'unit': 'K',
          'value': dict({
            'maximum': 6535,
            'minimum': 2000,
          }),
        }),
      }),
      <Capability.HEALTH_CHECK: 'healthCheck'>: dict({
        <Attribute.DEVICE_WATCH_DEVICE_STATUS: 'DeviceWatch-DeviceStatus'>: dict({
          'data': dict({
          }),
          'timestamp': '2025-02-07T15:14:53.823Z',
          'value': 'online',
        }),
        <Attribute.DEVICE_WATCH_ENROLL: 'DeviceWatch-Enroll'>: dict({
          'value': None,
        }),
        <Attribute.CHECK_INTERVAL: 'checkInterval'>: dict({
          'data': dict({
            'deviceScheme': 'UNTRACKED',
            'protocol': 'cloud',
          }),
          'timestamp': '2023-12-17T18:11:41.671Z',
          'unit': 's',
          'value': 60,
        }),
        <Attribute.HEALTH_STATUS: 'healthStatus'>: dict({
          'value': None,
        }),
      }),
      <Capability.REFRESH: 'refresh'>: dict({
      }),
      <Capability.SWITCH: 'switch'>: dict({
        <Attribute.SWITCH: 'switch'>: dict({
          'timestamp': '2025-02-07T21:56:04.127Z',
          'value': 'on',
        }),
      }),
      <Capability.SWITCH_LEVEL: 'switchLevel'>: dict({
        <Attribute.LEVEL: 'level'>: dict({
          'timestamp': '2025-02-07T21:56:04.127Z',
          'unit': '%',
          'value': 70,
        }),
        <Attribute.LEVEL_RANGE: 'levelRange'>: dict({
          'timestamp': '2025-02-07T15:14:53.823Z',
          'unit': '%',
          'value': dict({
            'maximum': 100,
            'minimum': 1,
          }),
        }),
      }),
      <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>: dict({
        <Attribute.CIRCADIAN: 'circadian'>: dict({
          'value': None,
        }),
      }),
      <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>: dict({
        <Attribute.FADE: 'fade'>: dict({
          'value': None,
        }),
      }),
    }),
  })
# ---
# name: test_fetching_status_of_single_device[hue_rgbw_color_bulb]
  dict({
    'main': dict({
      <Capability.COLOR_CONTROL: 'colorControl'>: dict({
        <Attribute.COLOR: 'color'>: dict({
          'value': None,
        }),
        <Attribute.HUE: 'hue'>: dict({
          'timestamp': '2025-02-07T15:14:53.812Z',
          'value': 1,
        }),
        <Attribute.SATURATION: 'saturation'>: dict({
          'timestamp': '2025-02-07T15:14:53.812Z',
          'value': 60,
        }),
      }),
      <Capability.COLOR_TEMPERATURE: 'colorTemperature'>: dict({
        <Attribute.COLOR_TEMPERATURE: 'colorTemperature'>: dict({
          'timestamp': '2025-02-07T21:56:02.381Z',
          'unit': 'K',
          'value': 3000,
        }),
        <Attribute.COLOR_TEMPERATURE_RANGE: 'colorTemperatureRange'>: dict({
          'timestamp': '2025-02-06T15:14:52.807Z',
          'unit': 'K',
          'value': dict({
            'maximum': 6535,
            'minimum': 2000,
          }),
        }),
      }),
      <Capability.HEALTH_CHECK: 'healthCheck'>: dict({
        <Attribute.DEVICE_WATCH_DEVICE_STATUS: 'DeviceWatch-DeviceStatus'>: dict({
          'data': dict({
          }),
          'timestamp': '2025-02-07T15:14:53.812Z',
          'value': 'online',
        }),
        <Attribute.DEVICE_WATCH_ENROLL: 'DeviceWatch-Enroll'>: dict({
          'value': None,
        }),
        <Attribute.CHECK_INTERVAL: 'checkInterval'>: dict({
          'data': dict({
            'deviceScheme': 'UNTRACKED',
            'protocol': 'cloud',
          }),
          'timestamp': '2023-12-17T18:11:41.678Z',
          'unit': 's',
          'value': 60,
        }),
        <Attribute.HEALTH_STATUS: 'healthStatus'>: dict({
          'value': None,
        }),
      }),
      <Capability.REFRESH: 'refresh'>: dict({
      }),
      <Capability.HUE_SYNC_MODE: 'samsungim.hueSyncMode'>: dict({
        <Attribute.MODE: 'mode'>: dict({
          'timestamp': '2025-02-07T15:14:53.812Z',
          'value': 'normal',
        }),
      }),
      <Capability.SWITCH: 'switch'>: dict({
        <Attribute.SWITCH: 'switch'>: dict({
          'timestamp': '2025-02-08T07:08:19.519Z',
          'value': 'off',
        }),
      }),
      <Capability.SWITCH_LEVEL: 'switchLevel'>: dict({
        <Attribute.LEVEL: 'level'>: dict({
          'timestamp': '2025-02-07T21:56:02.381Z',
          'unit': '%',
          'value': 70,
        }),
        <Attribute.LEVEL_RANGE: 'levelRange'>: dict({
          'timestamp': '2025-02-07T15:14:53.812Z',
          'unit': '%',
          'value': dict({
            'maximum': 100,
            'minimum': 1,
          }),
        }),
      }),
      <Capability.CIRCADIAN_LIGHTING_EFFECT: 'synthetic.lightingEffectCircadian'>: dict({
        <Attribute.CIRCADIAN: 'circadian'>: dict({
          'value': None,
        }),
      }),
      <Capability.FADE_LIGHTNING_EFFECT: 'synthetic.lightingEffectFade'>: dict({
        <Attribute.FADE: 'fade'>: dict({
          'value': None,
        }),
      }),
    }),
  })
# ---
